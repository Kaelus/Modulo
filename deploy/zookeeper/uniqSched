#!/bin/bash
#
# Usage:  ./delete-duplicates.sh  [<files...>]
#
declare -A filecksums

falseFiles=$(grep "^false" ./record/* -Irn | cut -d':' -f1 | cut -d'/' -f1-3)
#echo $falseFiles
#files=$(find ./record -name "schedExec" -print)
numSchedExecFiles=0
numDupliFiles=0
schedExecFiles=
uniqSchedExecFiles=
dupliSchedExecFiles=
for fi in $falseFiles
do
    if [[ -e "$fi/schedExec" ]]
    then
	if [ "$schedExecFiles" == "" ];then
	    uniqSchedExecFiles="$fi/schedExec"
	    schedExecFiles="$fi/schedExec"
	else
	    uniqSchedExecFiles="$uniqSchedExecFiles $fi/schedExec"
	    schedExecFiles="$schedExecFiles $fi/schedExec"
	fi
	$((numSchedExecFiles++))
    else
	if [ "$schedExecFiles" == "" ];then
	    dupliSchedExecFiles="$fi/schedExec"
	    schedExecFiles="$fi/schedExec"
	else
	    dupliSchedExecFiles="$dupliSchedExecFiles $fi/schedExec"
	    schedExecFiles="$schedExecFiles $fi/schedExec"
	fi
	$((numDupliFiles++))
    fi
done
echo "========== unique schedExec files ============"
echo $uniqSchedExecFiles
echo "========== duplicated schedExec files ============"
echo $dupliSchedExecFiles


# No args, use files in current directory
test 0 -eq $# && set -- *

counter=0
#for file in "$@"
for file in $schedExecFiles
do
    # Files only (also no symlinks)
    [[ -f "$file" ]] && [[ ! -h "$file" ]] || continue

    # Generate the checksum
    cksum=$(cksum <"$file" | tr ' ' _)

    # Have we already got this one?
    if [[ -n "${filecksums[$cksum]}" ]] && [[ "${filecksums[$cksum]}" != "$file" ]]
    then
	((counter++))
        echo "Found '$file' is a duplicate of '${filecksums[$cksum]}'" >&2
	mv $file "$file""-duplicated"
    else
        filecksums[$cksum]="$file"
    fi
done
echo "There were $numSchedExecFiles many violation causing schedExec files in total"
echo "There were $numDupliFiles many duplicated violation causing schedExec-duplicated files"
echo "looking for any duplicated schedExec file is done"
echo "Newly found $counter many duplicated schedExec files" 
